{
    "options":[
       {
          "enabled":true,
          "definition":{
             "id":"5d58cc01-7c75-450c-be18-a388ddb129ec"
          },
          "inputs":{
             "branchFilters":"[\"+refs/heads/*\"]",
             "additionalFields":"{}"
          }
       },
       {
          "enabled":false,
          "definition":{
             "id":"a9db38f9-9fdc-478c-b0f9-464221e58316"
          },
          "inputs":{
             "workItemType":"1905978",
             "assignToRequestor":"true",
             "additionalFields":"{}"
          }
       }
    ],
    "triggers":[
       {
          "branchFilters":[
             "+vmss"
          ],
          "pathFilters":[
 
          ],
          "batchChanges":true,
          "maxConcurrentBuildsPerBranch":1,
          "pollingInterval":0,
          "triggerType":2
       }
    ],
    "variables":{
       "BuildConfiguration":{
          "value":"release",
          "allowOverride":true
       },
       "BuildPlatform":{
          "value":"any cpu",
          "allowOverride":true
       },
       "imageid.region":{
          "value":"eun"
       },
       "imageid_storageaccount":{
          "value":"wavstscustomeunstornp"
       },
       "imageid_storageaccountaccesskey":{
          "value":null,
          "isSecret":true
       },
       "imageid.version":{
          "value":"${Build.BuildNumber}"
       },
       "system.debug":{
          "value":"false",
          "allowOverride":true
       }
    },
    "retentionRules":[
       {
          "branches":[
             "+refs/heads/*"
          ],
          "artifacts":[
 
          ],
          "artifactTypesToDelete":[
             "FilePath",
             "SymbolStore"
          ],
          "daysToKeep":10,
          "minimumToKeep":1,
          "deleteBuildRecord":true,
          "deleteTestResults":true
       }
    ],
    "properties":{
 
    },
    "tags":[
 
    ],
    "metrics":[
       {
          "name":"CurrentBuildsInQueue",
          "scope":"refs/heads/vmss",
          "intValue":0
       },
       {
          "name":"CurrentBuildsInProgress",
          "scope":"refs/heads/vmss",
          "intValue":0
       },
       {
          "name":"CanceledBuilds",
          "scope":"refs/heads/vmss",
          "intValue":0,
          "date":"2018-07-31T00:00:00.000Z"
       },
       {
          "name":"FailedBuilds",
          "scope":"refs/heads/vmss",
          "intValue":5,
          "date":"2018-07-31T00:00:00.000Z"
       },
       {
          "name":"PartiallySuccessfulBuilds",
          "scope":"refs/heads/vmss",
          "intValue":0,
          "date":"2018-07-31T00:00:00.000Z"
       },
       {
          "name":"SuccessfulBuilds",
          "scope":"refs/heads/vmss",
          "intValue":2,
          "date":"2018-07-31T00:00:00.000Z"
       },
       {
          "name":"TotalBuilds",
          "scope":"refs/heads/vmss",
          "intValue":7,
          "date":"2018-07-31T00:00:00.000Z"
       },
       {
          "name":"CanceledBuilds",
          "scope":"refs/heads/vmss",
          "intValue":1,
          "date":"2018-07-30T00:00:00.000Z"
       },
       {
          "name":"FailedBuilds",
          "scope":"refs/heads/vmss",
          "intValue":0,
          "date":"2018-07-30T00:00:00.000Z"
       },
       {
          "name":"PartiallySuccessfulBuilds",
          "scope":"refs/heads/vmss",
          "intValue":0,
          "date":"2018-07-30T00:00:00.000Z"
       },
       {
          "name":"SuccessfulBuilds",
          "scope":"refs/heads/vmss",
          "intValue":6,
          "date":"2018-07-30T00:00:00.000Z"
       },
       {
          "name":"TotalBuilds",
          "scope":"refs/heads/vmss",
          "intValue":7,
          "date":"2018-07-30T00:00:00.000Z"
       }
    ],
    "_links":{
       "self":{
          "href":"https://williamamido.visualstudio.com/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b/_apis/build/Definitions/2?revision=15"
       },
       "web":{
          "href":"https://williamamido.visualstudio.com/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b/_build/definition?definitionId=2"
       },
       "editor":{
          "href":"https://williamamido.visualstudio.com/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b/_build/designer?id=2&_a=edit-build-definition"
       },
       "badge":{
          "href":"https://williamamido.visualstudio.com/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b/_apis/build/status/2"
       }
    },
    "buildNumberFormat":"$(date:yyyyMMdd)$(rev:.r)",
    "jobAuthorizationScope":1,
    "jobTimeoutInMinutes":60,
    "jobCancelTimeoutInMinutes":5,
    "process":{
       "phases":[
          {
             "steps":[
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Use NuGet 4.4.1",
                   "timeoutInMinutes":0,
                   "task":{
                      "id":"2c65196a-54fd-4a02-9be8-d9d1837b7c5d",
                      "versionSpec":"0.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "versionSpec":"4.4.1",
                      "checkLatest":"false"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"NuGet restore",
                   "timeoutInMinutes":0,
                   "task":{
                      "id":"333b11bd-d341-40d9-afcf-b32d5ce6f23b",
                      "versionSpec":"2.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "command":"restore",
                      "solution":"$(Parameters.solution)",
                      "selectOrConfig":"select",
                      "feedRestore":"",
                      "includeNuGetOrg":"true",
                      "nugetConfigPath":"",
                      "externalEndpoints":"",
                      "noCache":"false",
                      "disableParallelProcessing":"false",
                      "packagesDirectory":"",
                      "verbosityRestore":"Detailed",
                      "searchPatternPush":"$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg",
                      "nuGetFeedType":"internal",
                      "feedPublish":"",
                      "allowPackageConflicts":"false",
                      "externalEndpoint":"",
                      "verbosityPush":"Detailed",
                      "searchPatternPack":"**/*.csproj",
                      "configurationToPack":"$(BuildConfiguration)",
                      "outputDir":"$(Build.ArtifactStagingDirectory)",
                      "versioningScheme":"off",
                      "includeReferencedProjects":"false",
                      "versionEnvVar":"",
                      "requestedMajorVersion":"1",
                      "requestedMinorVersion":"0",
                      "requestedPatchVersion":"0",
                      "packTimezone":"utc",
                      "includeSymbols":"false",
                      "toolPackage":"false",
                      "buildProperties":"",
                      "basePath":"",
                      "verbosityPack":"Detailed",
                      "arguments":""
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Build solution",
                   "timeoutInMinutes":0,
                   "task":{
                      "id":"71a9a2d3-a98a-4caa-96ab-affca411ecda",
                      "versionSpec":"1.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "solution":"$(Parameters.solution)",
                      "vsVersion":"latest",
                      "msbuildArgs":"/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"",
                      "platform":"$(BuildPlatform)",
                      "configuration":"$(BuildConfiguration)",
                      "clean":"false",
                      "maximumCpuCount":"false",
                      "restoreNugetPackages":"false",
                      "msbuildArchitecture":"x86",
                      "logProjectEvents":"true",
                      "createLogFile":"false"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Test Assemblies",
                   "timeoutInMinutes":0,
                   "task":{
                      "id":"ef087383-ee5e-42c7-9a53-ab56c98420f9",
                      "versionSpec":"2.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "testSelector":"testAssemblies",
                      "testAssemblyVer2":"**\\$(BuildConfiguration)\\*test*.dll\n!**\\obj\\**",
                      "testPlan":"",
                      "testSuite":"",
                      "testConfiguration":"",
                      "tcmTestRun":"$(test.RunId)",
                      "searchFolder":"$(System.DefaultWorkingDirectory)",
                      "testFiltercriteria":"",
                      "runOnlyImpactedTests":"False",
                      "runAllTestsAfterXBuilds":"50",
                      "uiTests":"false",
                      "vstestLocationMethod":"version",
                      "vsTestVersion":"latest",
                      "vstestLocation":"",
                      "runSettingsFile":"",
                      "overrideTestrunParameters":"",
                      "pathtoCustomTestAdapters":"",
                      "runInParallel":"False",
                      "runTestsInIsolation":"False",
                      "codeCoverageEnabled":"False",
                      "otherConsoleOptions":"",
                      "distributionBatchType":"basedOnTestCases",
                      "batchingBasedOnAgentsOption":"autoBatchSize",
                      "customBatchSizeValue":"10",
                      "batchingBasedOnExecutionTimeOption":"autoBatchSize",
                      "customRunTimePerBatchValue":"60",
                      "dontDistribute":"False",
                      "testRunTitle":"",
                      "platform":"$(BuildPlatform)",
                      "configuration":"$(BuildConfiguration)",
                      "publishRunAttachments":"true",
                      "rerunFailedTests":"False",
                      "rerunType":"basedOnTestFailurePercentage",
                      "rerunFailedThreshold":"30",
                      "rerunFailedTestCasesMaxLimit":"5",
                      "rerunMaxAttempts":"3"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":true,
                   "alwaysRun":false,
                   "displayName":"Publish symbols path",
                   "timeoutInMinutes":0,
                   "task":{
                      å"id":"0675668a-7bba-4ccb-901d-5ad6554ca653",
                      "versionSpec":"2.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "SymbolsFolder":"$(Build.SourcesDirectory)",
                      "SearchPattern":"**\\bin\\**\\*.pdb",
                      "IndexSources":"true",
                      "PublishSymbols":"false",
                      "SymbolServerType":"TeamServices",
                      "SymbolsPath":"",
                      "DetailedLog":"true",
                      "TreatNotIndexedAsWarning":"false",
                      "SymbolsMaximumWaitTime":"",
                      "SymbolsProduct":"",
                      "SymbolsVersion":"",
                      "SymbolsArtifactName":"Symbols_$(BuildConfiguration)"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Publish Artifact",
                   "timeoutInMinutes":0,
                   "task":{
                      "id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
                      "versionSpec":"1.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "PathtoPublish":"$(build.artifactstagingdirectory)",
                      "ArtifactName":"$(Parameters.ArtifactName)",
                      "ArtifactType":"Container",
                      "TargetPath":"\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
                      "Parallel":"false",
                      "ParallelCount":"8"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Publish Scripts Artifact",
                   "timeoutInMinutes":0,
                   "condition":"succeeded()",
                   "task":{
                      "id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
                      "versionSpec":"1.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "PathtoPublish":"scripts",
                      "ArtifactName":"scripts",
                      "ArtifactType":"Container",
                      "TargetPath":"",
                      "Parallel":"false",
                      "ParallelCount":"8"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Build immutable image",
                   "timeoutInMinutes":0,
                   "condition":"succeeded()",
                   "task":{
                      "id":"845fd4f4-642d-4694-8514-047948a5a556",
                      "versionSpec":"0.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "templateType":"builtin",
                      "customTemplateLocation":"",
                      "customTemplateParameters":"{}",
                      "ConnectedServiceName":"dcc1297f-6129-422c-80c5-1fbad19f83b2",
                      "location":"northeurope",
                      "storageAccountName":"wavstscustomeunstornp",
                      "azureResourceGroup":"wa-vstscustom-eun-rg-np",
                      "baseImageSource":"default",
                      "baseImage":"MicrosoftWindowsServer:WindowsServer:2016-Datacenter:windows",
                      "customImageUrl":"",
                      "customImageOSType":"windows",
                      "packagePath":"scripts",
                      "deployScriptPath":"./configure.ps1",
                      "deployScriptArguments":"",
                      "additionalBuilderParameters":"{}",
                      "skipTempFileCleanupDuringVMDeprovision":"true",
                      "imageUri":"Imageid.URL"
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Populate ID in Table Storage",
                   "timeoutInMinutes":0,
                   "condition":"succeeded()",
                   "task":{
                      "id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                      "versionSpec":"2.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "targetType":"inline",
                      "filePath":"",
                      "arguments":"",
                      "script":"$storageAccount = \"$env:imageid_storageaccount\"\n$accesskey = \"$env:imageid_storageaccountaccesskey\"\n \nfunction InsertReplaceTableEntity($TableName, $PartitionKey, $RowKey, $entity) {\n    $version = \"2017-04-17\"\n    $resource = \"$tableName(PartitionKey='$PartitionKey',RowKey='$Rowkey')\"\n    $table_url = \"https://$storageAccount.table.core.windows.net/$resource\"\n    $GMTTime = (Get-Date).ToUniversalTime().toString('R')\n    $stringToSign = \"$GMTTime`n/$storageAccount/$resource\"\n    $hmacsha = New-Object System.Security.Cryptography.HMACSHA256\n    $hmacsha.key = [Convert]::FromBase64String($accesskey)\n    $signature = $hmacsha.ComputeHash([Text.Encoding]::UTF8.GetBytes($stringToSign))\n    $signature = [Convert]::ToBase64String($signature)\n    $headers = @{\n        'x-ms-date'    = $GMTTime\n        Authorization  = \"SharedKeyLite \" + $storageAccount + \":\" + $signature\n        \"x-ms-version\" = $version\n        Accept         = \"application/json;odata=fullmetadata\"\n    }\n    $body = $entity | ConvertTo-Json\n    $item = Invoke-RestMethod -Method PUT -Uri $table_url -Headers $headers -Body $body -ContentType application/json\n}\n \n $body = @{\n    RowKey       = \"$env:imageid_region\"\n    PartitionKey = \"$env:imageid_version\"\n    ImageURI      = \"$env:imageid_URL\"\n}\n\nWrite-Host \"Creating a new table entity\" -ForegroundColor yellow\nInsertReplaceTableEntity -TableName \"images\" -RowKey $body.RowKey -PartitionKey $body.PartitionKey -entity $body\n",
                      "errorActionPreference":"stop",
                      "failOnStderr":"false",
                      "ignoreLASTEXITCODE":"false",
                      "workingDirectory":""
                   }
                },
                {
                   "environment":{
 
                   },
                   "enabled":true,
                   "continueOnError":false,
                   "alwaysRun":false,
                   "displayName":"Create Octopus Release",
                   "timeoutInMinutes":5,
                   "condition":"succeeded()",
                   "task":{
                      "id":"4e131b60-5532-4362-95b6-7c67d9841b4f",
                      "versionSpec":"2.*",
                      "definitionType":"task"
                   },
                   "inputs":{
                      "OctoConnectedServiceName":"d68d6a51-f33d-47c6-a83d-ed0cf110a98e",
                      "ProjectName":"Projects-1",
                      "ReleaseNumber":"${Build.BuildNumber}",
                      "Channel":"",
                      "ChangesetCommentReleaseNotes":"false",
                      "WorkItemReleaseNotes":"false",
                      "CustomReleaseNotes":"",
                      "DeployToEnvironment":"",
                      "DeployForTenants":"",
                      "DeployForTenantTags":"",
                      "DeploymentProgress":"false",
                      "AdditionalArguments":""
                   }
                }
             ],
             "name":"Phase 1",
             "refName":"Phase_1",
             "condition":"succeeded()",
             "target":{
                "executionOptions":{
                   "type":0
                },
                "allowScriptsAuthAccessOption":false,
                "type":1
             },
             "jobAuthorizationScope":"projectCollection",
             "jobCancelTimeoutInMinutes":1
          }
       ],
       "type":1
    },
    "repository":{
       "properties":{
          "apiUrl":"https://api.github.com/repos/williamayerst/dotnetcore.sample",
          "branchesUrl":"https://api.github.com/repos/williamayerst/dotnetcore.sample/branches",
          "cloneUrl":"https://github.com/williamayerst/dotnetcore.sample.git",
          "fullName":"williamayerst/dotnetcore.sample",
          "manageUrl":"https://github.com/williamayerst/dotnetcore.sample",
          "refsUrl":"https://api.github.com/repos/williamayerst/dotnetcore.sample/git/refs",
          "defaultBranch":"master",
          "connectedServiceId":"9079ac93-72b4-4e00-aa2e-a49ed37b489a",
          "isPrivate":"False",
          "checkoutNestedSubmodules":"false",
          "cleanOptions":"0",
          "fetchDepth":"0",
          "gitLfsSupport":"false",
          "reportBuildStatus":"true",
          "skipSyncSource":"false",
          "labelSourcesFormat":"$(build.buildNumber)",
          "labelSources":"0"
       },
       "id":"williamayerst/dotnetcore.sample",
       "type":"GitHub",
       "name":"williamayerst/dotnetcore.sample",
       "url":"https://github.com/williamayerst/dotnetcore.sample.git",
       "defaultBranch":"vmss",
       "clean":"false",
       "checkoutSubmodules":false
    },
    "processParameters":{
       "inputs":[
          {
             "aliases":[
 
             ],
             "options":{
 
             },
             "properties":{
 
             },
             "name":"solution",
             "label":"Path to solution or packages.config",
             "defaultValue":"**\\*.sln",
             "required":true,
             "type":"filePath",
             "helpMarkDown":"The path to the Visual Studio solution file or NuGet packages.config",
             "visibleRule":"",
             "groupName":""
          },
          {
             "aliases":[
 
             ],
             "options":{
 
             },
             "properties":{
 
             },
             "name":"ArtifactName",
             "label":"Artifact Name",
             "defaultValue":"drop",
             "required":true,
             "type":"string",
             "helpMarkDown":"The name of the artifact to create.",
             "visibleRule":"",
             "groupName":""
          }
       ]
    },
    "quality":1,
    "authoredBy":{
       "displayName":"William Ayerst",
       "url":"https://app.vssps.visualstudio.com/A65033bb0-cd86-4bb2-a64f-9e2e61ae4cf5/_apis/Identities/e6fba8e7-184a-6101-a89d-6cef263dcb50",
       "_links":{
          "avatar":{
             "href":"https://williamamido.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.ZTZmYmE4ZTctMTg0YS03MTAxLWE4OWQtNmNlZjI2M2RjYjUw"
          }
       },
       "id":"e6fba8e7-184a-6101-a89d-6cef263dcb50",
       "uniqueName":"William.Ayerst@amido.com",
       "imageUrl":"https://williamamido.visualstudio.com/_api/_common/identityImage?id=e6fba8e7-184a-6101-a89d-6cef263dcb50",
       "descriptor":"aad.ZTZmYmE4ZTctMTg0YS03MTAxLWE4OWQtNmNlZjI2M2RjYjUw"
    },
    "drafts":[
 
    ],
    "queue":{
       "_links":{
          "self":{
             "href":"https://williamamido.visualstudio.com/_apis/build/Queues/16"
          }
       },
       "id":16,
       "name":"Hosted VS2017",
       "url":"https://williamamido.visualstudio.com/_apis/build/Queues/16",
       "pool":{
          "id":4,
          "name":"Hosted VS2017",
          "isHosted":true
       }
    },
    "id":2,
    "name":"Build and Create Image",
    "url":"https://williamamido.visualstudio.com/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b/_apis/build/Definitions/2?revision=15",
    "uri":"vstfs:///Build/Definition/2",
    "path":"\\",
    "type":2,
    "queueStatus":0,
    "revision":15,
    "createdDate":"2018-07-31T12:26:48.593Z",
    "project":{
       "id":"96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b",
       "name":"VMSS.dotnetcore.sample",
       "url":"https://williamamido.visualstudio.com/_apis/projects/96f6e2c5-35db-4bb9-a5b9-f0ee78e93a9b",
       "state":"wellFormed",
       "revision":28,
       "visibility":0
    }
 }